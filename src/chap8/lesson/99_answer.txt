[lesson8_1:D]
java.baseモジュールは明示していなくても、
すべてのモジュール宣言で暗黙的にrequiredとなるため正解は、選択肢D

[lesson8_2:A,D]
A. module-info.javaのファイル名は固定であるため正解
B. 公開するパッケージがない場合は空となるため誤り
C. module-info.javaも通常通りjavacによるコンパイルが必要なため誤り
D. 公開するパッケージはexportsディレクティブによって行われるため正解
E. モジュール名は.(ドット)で区切られた名前やドットを使用しない単体の名前も使用可のため誤り
正解となる選択肢はA,Dとなる

[lesson8_3:A,E]
module宣言の後の「{」前までがモジュール名になります。
また{}内はモジュールが依存するパッケージを記述したり、公開するパッケージを宣言したりします。
依存するパッケージはrequiresディレクティブを使用するため
選択肢Aは正解となります。
選択肢BはAと逆の記述となるため間違いとなります。
選択肢Cはパッケージを公開しているとあるため問題文中のexportsディレクティブを指していると
思われますが、公開しているパッケージは選択肢Cとは異なるため選択肢Cは間違い
モジュール名は前述したとおりmodule～「{」までがモジュール名になるため選択肢Dは間違いであり、
選択肢Eが正解となる。
従って正解は選択肢A,Eとなる。

[lesson8_4:B]
依存関係を調べるコマンドは「jdeps」コマンドが提供されています。従って正解は選択肢B。

[lesson8_5:A]
モジュールの解決はjavaコマンドの--show-module-resolutionオプションを使用するため
正解は選択肢A

[lesson8_6:B]
問題文中の
「各クラスのパッケージに該当するディレクトリはまだ作成されていないため、
コンパイル時に生成する」
とあるためjavacのオプションの「-d」を使用する必要があるため回答の選択肢は、
-dがあるAかBになります。
また、出力先のclassファイルはxyz.test\binに出力したいとあるため、
正解は選択肢Bとなります。

※javac -dオプションはクラスファイルの出力先ディレクトリを設定します
【参考】https://docs.oracle.com/javase/jp/11/tools/javac.html#GUID-AEEC9F07-CB49-4E96-8BC7-BCC2C7F725C9
また-cpはクラスパス、つまりコンパイルしたいクラスへのパスを表すため選択肢D,Eは間違い
-mオプションは指定されたモジュールのみコンパイルするオプションとなり、
コンパイルするJavaクラスを指定しているため誤り

[lesson8_7:A]
javaの-pオプションは--module-pathの省略形となり、
モジュールを探すためのモジュールパスを指定するオプションとなります。
従って-pの次はモジュールへのパスを指定することになり、
次に実行するモジュールクラスのmainメソッドを持つクラスへのパス指定になるため
-mオプションも指定されている必要があります。
問題8-6のmainメソッドを持つクラスはdd.ee.Mainクラスになるため
コンパイル時に出力されているクラスを指定しているxyz.test/dd.ee.Mainとなっている
選択肢Aが正解。
