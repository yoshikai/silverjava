[lesson8_1:D]
java.baseモジュールはrequiresを
明示しなくても全てのモジュール宣言で
暗黙的にrequiresとなります。

[lesson8_2:A,D]
選択肢A：module-info.javaの名前は固定のため正解。
選択肢B：公開するパッケージが空のmodule-info.javaになるためBは間違い。
選択肢C:.javaファイルのためコンパイルは必要
選択肢D：公開するパッケージはexportsディレクティブで行うため正解
選択肢E:ドットで区切られた階層でなくても良いため間違い。
従って正解はA,D

[lesson8_3:A,E]
requiresディレクティブは依存するモジュールの記述するため、
com.mypj.modeAはcom.mypj.modeBに依存しているため選択肢Aは正解
また1行目のmoduleの後がmodule名のため選択肢Eが正解。
従って選択肢A,Eが正解
またexportsディレクティブで公開するモジュールを指定するため、
com.mypj.modeA.pkgパッケージを公開している。

[lesson8_4:B]
モジュールの依存関係を調べるコマンドはjdepsコマンドとなるため
正解は選択肢B

[lesson8_5:A]
javaコマンドのオプションで、
--show-module-resolution
を使用するとモジュールの解決の様子が出力される。
従って正解は選択肢A

[lesson8_6:B]
要件を整理すると、
1. xyz.test\srcフォルダにMain.java、Play.javaがある
2. classファイルはxyz.test\binディレクトリに出力させたい
3. classファイル用のディレクトリは未生成
4. コンパイルを行うディレクトリはxyz.test\srcフォルダ
コンパイルするクラスのパッケージのディレクトリがないため
作成する必要がある、そのため
-dオプションが必要なため選択肢AまたはBが正解となる。
コンパイルするディレクトリがsrcディレクトリのため
binディレクトリに出力するには
..\bin
と出力先ディレクトリのルート指定が必須のため選択肢Bが正解

[lesson8_7:A]
モジュールを使ったプログラムの実行には
--module-path(省略形-m)の指定が必要なため、
-mを使用していない選択肢B,Dは間違い
またモジュールの使用にはモジュール名（ここではxyz.test）と
mainメソッドを持つクラスへのパッケージ名を含めた完全修飾名が必要なため
xyz.test/dd.ee.Main
となる。したがって選択肢Aが正解
